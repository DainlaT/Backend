// <auto-generated />
using System;
using Backend.DB.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Backend.DB.Migrations
{
    [DbContext(typeof(KnowledgeDbContext))]
    [Migration("20241102173728_initial")]
    partial class initial
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.10")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Backend.DB.Models.Department", b =>
                {
                    b.Property<int>("Id")
                        .HasColumnType("int")
                        .HasColumnName("id");

                    b.Property<int?>("FacultyId")
                        .HasColumnType("int")
                        .HasColumnName("faculty_id");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("name");

                    b.HasKey("Id")
                        .HasName("PK__departme__3213E83FFB9E7FCC");

                    b.HasIndex("FacultyId");

                    b.ToTable("departments", (string)null);
                });

            modelBuilder.Entity("Backend.DB.Models.Discipline", b =>
                {
                    b.Property<int>("Id")
                        .HasColumnType("int")
                        .HasColumnName("id");

                    b.Property<int?>("DepartmentId")
                        .HasColumnType("int")
                        .HasColumnName("department_id");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("name");

                    b.HasKey("Id")
                        .HasName("PK__discipli__3213E83F3A8C89D4");

                    b.HasIndex("DepartmentId");

                    b.ToTable("disciplines", (string)null);
                });

            modelBuilder.Entity("Backend.DB.Models.DisciplineTeacher", b =>
                {
                    b.Property<int>("Id")
                        .HasColumnType("int")
                        .HasColumnName("id");

                    b.Property<int?>("DisciplineId")
                        .HasColumnType("int")
                        .HasColumnName("discipline_id");

                    b.Property<int?>("ResponsibleTeacherId")
                        .HasColumnType("int")
                        .HasColumnName("responsible_teacher_id");

                    b.HasKey("Id")
                        .HasName("PK__discipli__3213E83F12EC2320");

                    b.HasIndex("DisciplineId");

                    b.HasIndex("ResponsibleTeacherId");

                    b.ToTable("discipline_teacher", (string)null);
                });

            modelBuilder.Entity("Backend.DB.Models.Faculty", b =>
                {
                    b.Property<int>("Id")
                        .HasColumnType("int")
                        .HasColumnName("id");

                    b.Property<string>("FacultyName")
                        .IsRequired()
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("faculty_name");

                    b.HasKey("Id")
                        .HasName("PK__facultie__3213E83FBE3BA22C");

                    b.ToTable("faculties", (string)null);
                });

            modelBuilder.Entity("Backend.DB.Models.Report", b =>
                {
                    b.Property<int>("Id")
                        .HasColumnType("int")
                        .HasColumnName("id");

                    b.Property<byte?>("AllDone")
                        .HasColumnType("tinyint")
                        .HasColumnName("all_done");

                    b.Property<int?>("DisciplineId")
                        .HasColumnType("int")
                        .HasColumnName("discipline_id");

                    b.Property<byte?>("DoneInElectronicForm")
                        .HasColumnType("tinyint")
                        .HasColumnName("done_in_electronic_form");

                    b.Property<byte?>("DoneInPaperForm")
                        .HasColumnType("tinyint")
                        .HasColumnName("done_in_paper_form");

                    b.Property<string>("FilePath")
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("file_path");

                    b.Property<byte?>("IsCorrect")
                        .HasColumnType("tinyint")
                        .HasColumnName("is_correct");

                    b.Property<string>("ResultOfAttestation")
                        .HasColumnType("text")
                        .HasColumnName("result_of_attestation");

                    b.Property<int?>("TeacherId")
                        .HasColumnType("int")
                        .HasColumnName("teacher_id");

                    b.HasKey("Id")
                        .HasName("PK__reports__3213E83FF39C3E5E");

                    b.HasIndex("DisciplineId");

                    b.HasIndex("TeacherId");

                    b.ToTable("reports", (string)null);
                });

            modelBuilder.Entity("Backend.DB.Models.Role", b =>
                {
                    b.Property<int>("Id")
                        .HasColumnType("int")
                        .HasColumnName("id");

                    b.Property<string>("RoleName")
                        .IsRequired()
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("role_name");

                    b.HasKey("Id")
                        .HasName("PK__roles__3213E83F52C644FD");

                    b.ToTable("roles", (string)null);
                });

            modelBuilder.Entity("Backend.DB.Models.Status", b =>
                {
                    b.Property<int>("Id")
                        .HasColumnType("int")
                        .HasColumnName("id");

                    b.Property<string>("StatusName")
                        .IsRequired()
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("status_name");

                    b.HasKey("Id")
                        .HasName("PK__statuses__3213E83FA5731117");

                    b.ToTable("statuses", (string)null);
                });

            modelBuilder.Entity("Backend.DB.Models.StudyGroup", b =>
                {
                    b.Property<int>("Id")
                        .HasColumnType("int")
                        .HasColumnName("id");

                    b.Property<string>("GroupNumber")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("group_number");

                    b.Property<int?>("StudyProgramId")
                        .HasColumnType("int")
                        .HasColumnName("study_program_id");

                    b.HasKey("Id")
                        .HasName("PK__study_gr__3213E83F1205F8C9");

                    b.HasIndex("StudyProgramId");

                    b.ToTable("study_groups", (string)null);
                });

            modelBuilder.Entity("Backend.DB.Models.StudyProgram", b =>
                {
                    b.Property<int>("Id")
                        .HasColumnType("int")
                        .HasColumnName("id");

                    b.Property<string>("CypherOfTheDirection")
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("cypher_of_the_direction");

                    b.Property<int?>("DepartmentId")
                        .HasColumnType("int")
                        .HasColumnName("department_id");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("name");

                    b.HasKey("Id")
                        .HasName("PK__study_pr__3213E83FF4D1F0A8");

                    b.HasIndex("DepartmentId");

                    b.ToTable("study_programs", (string)null);
                });

            modelBuilder.Entity("Backend.DB.Models.Testing", b =>
                {
                    b.Property<int>("Id")
                        .HasColumnType("int")
                        .HasColumnName("id");

                    b.Property<int?>("DisciplineId")
                        .HasColumnType("int")
                        .HasColumnName("discipline_id");

                    b.Property<int?>("GroupId")
                        .HasColumnType("int")
                        .HasColumnName("group_id");

                    b.Property<int?>("ReportId")
                        .HasColumnType("int")
                        .HasColumnName("report_id");

                    b.Property<string>("ResultOfTesting")
                        .HasColumnType("text")
                        .HasColumnName("result_of_testing");

                    b.Property<DateOnly?>("ScheduledDate")
                        .HasColumnType("date")
                        .HasColumnName("scheduled_date");

                    b.Property<TimeOnly?>("ScheduledTime")
                        .HasColumnType("time")
                        .HasColumnName("scheduled_time");

                    b.Property<string>("Status")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("status");

                    b.HasKey("Id")
                        .HasName("PK__testing__3213E83FEC9AF393");

                    b.HasIndex("DisciplineId");

                    b.HasIndex("GroupId");

                    b.HasIndex("ReportId");

                    b.ToTable("testing", (string)null);
                });

            modelBuilder.Entity("Backend.DB.Models.User", b =>
                {
                    b.Property<int>("Id")
                        .HasColumnType("int")
                        .HasColumnName("id");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("email");

                    b.Property<int?>("FacultyId")
                        .HasColumnType("int")
                        .HasColumnName("faculty_id");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("name");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("password");

                    b.Property<int?>("RoleId")
                        .HasColumnType("int")
                        .HasColumnName("role_id");

                    b.Property<int?>("StatusId")
                        .HasColumnType("int")
                        .HasColumnName("status_id");

                    b.HasKey("Id")
                        .HasName("PK__users__3213E83F341FD6DD");

                    b.HasIndex("FacultyId");

                    b.HasIndex("RoleId");

                    b.HasIndex("StatusId");

                    b.HasIndex(new[] { "Email" }, "UQ__users__AB6E6164A645B7AF")
                        .IsUnique();

                    b.ToTable("users", (string)null);
                });

            modelBuilder.Entity("Backend.DB.Models.Department", b =>
                {
                    b.HasOne("Backend.DB.Models.Faculty", "Faculty")
                        .WithMany("Departments")
                        .HasForeignKey("FacultyId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .HasConstraintName("FK__departmen__facul__5DCAEF64");

                    b.Navigation("Faculty");
                });

            modelBuilder.Entity("Backend.DB.Models.Discipline", b =>
                {
                    b.HasOne("Backend.DB.Models.Department", "Department")
                        .WithMany("Disciplines")
                        .HasForeignKey("DepartmentId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .HasConstraintName("FK__disciplin__depar__66603565");

                    b.Navigation("Department");
                });

            modelBuilder.Entity("Backend.DB.Models.DisciplineTeacher", b =>
                {
                    b.HasOne("Backend.DB.Models.Discipline", "Discipline")
                        .WithMany("DisciplineTeachers")
                        .HasForeignKey("DisciplineId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .HasConstraintName("FK__disciplin__disci__797309D9");

                    b.HasOne("Backend.DB.Models.User", "ResponsibleTeacher")
                        .WithMany("DisciplineTeachers")
                        .HasForeignKey("ResponsibleTeacherId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .HasConstraintName("FK__disciplin__respo__7A672E12");

                    b.Navigation("Discipline");

                    b.Navigation("ResponsibleTeacher");
                });

            modelBuilder.Entity("Backend.DB.Models.Report", b =>
                {
                    b.HasOne("Backend.DB.Models.Discipline", "Discipline")
                        .WithMany("Reports")
                        .HasForeignKey("DisciplineId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .HasConstraintName("FK__reports__discipl__693CA210");

                    b.HasOne("Backend.DB.Models.User", "Teacher")
                        .WithMany("Reports")
                        .HasForeignKey("TeacherId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .HasConstraintName("FK__reports__teacher__6A30C649");

                    b.Navigation("Discipline");

                    b.Navigation("Teacher");
                });

            modelBuilder.Entity("Backend.DB.Models.StudyGroup", b =>
                {
                    b.HasOne("Backend.DB.Models.StudyProgram", "StudyProgram")
                        .WithMany("StudyGroups")
                        .HasForeignKey("StudyProgramId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .HasConstraintName("FK__study_gro__study__6383C8BA");

                    b.Navigation("StudyProgram");
                });

            modelBuilder.Entity("Backend.DB.Models.StudyProgram", b =>
                {
                    b.HasOne("Backend.DB.Models.Department", "Department")
                        .WithMany("StudyPrograms")
                        .HasForeignKey("DepartmentId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .HasConstraintName("FK__study_pro__depar__60A75C0F");

                    b.Navigation("Department");
                });

            modelBuilder.Entity("Backend.DB.Models.Testing", b =>
                {
                    b.HasOne("Backend.DB.Models.Discipline", "Discipline")
                        .WithMany("Testings")
                        .HasForeignKey("DisciplineId")
                        .HasConstraintName("FK__testing__discipl__75A278F5");

                    b.HasOne("Backend.DB.Models.StudyGroup", "Group")
                        .WithMany("Testings")
                        .HasForeignKey("GroupId")
                        .HasConstraintName("FK__testing__group_i__74AE54BC");

                    b.HasOne("Backend.DB.Models.Report", "Report")
                        .WithMany("Testings")
                        .HasForeignKey("ReportId")
                        .HasConstraintName("FK__testing__report___76969D2E");

                    b.Navigation("Discipline");

                    b.Navigation("Group");

                    b.Navigation("Report");
                });

            modelBuilder.Entity("Backend.DB.Models.User", b =>
                {
                    b.HasOne("Backend.DB.Models.Faculty", "Faculty")
                        .WithMany("Users")
                        .HasForeignKey("FacultyId")
                        .HasConstraintName("FK__users__faculty_i__5AEE82B9");

                    b.HasOne("Backend.DB.Models.Role", "Role")
                        .WithMany("Users")
                        .HasForeignKey("RoleId")
                        .HasConstraintName("FK__users__role_id__59063A47");

                    b.HasOne("Backend.DB.Models.Status", "Status")
                        .WithMany("Users")
                        .HasForeignKey("StatusId")
                        .HasConstraintName("FK__users__status_id__59FA5E80");

                    b.Navigation("Faculty");

                    b.Navigation("Role");

                    b.Navigation("Status");
                });

            modelBuilder.Entity("Backend.DB.Models.Department", b =>
                {
                    b.Navigation("Disciplines");

                    b.Navigation("StudyPrograms");
                });

            modelBuilder.Entity("Backend.DB.Models.Discipline", b =>
                {
                    b.Navigation("DisciplineTeachers");

                    b.Navigation("Reports");

                    b.Navigation("Testings");
                });

            modelBuilder.Entity("Backend.DB.Models.Faculty", b =>
                {
                    b.Navigation("Departments");

                    b.Navigation("Users");
                });

            modelBuilder.Entity("Backend.DB.Models.Report", b =>
                {
                    b.Navigation("Testings");
                });

            modelBuilder.Entity("Backend.DB.Models.Role", b =>
                {
                    b.Navigation("Users");
                });

            modelBuilder.Entity("Backend.DB.Models.Status", b =>
                {
                    b.Navigation("Users");
                });

            modelBuilder.Entity("Backend.DB.Models.StudyGroup", b =>
                {
                    b.Navigation("Testings");
                });

            modelBuilder.Entity("Backend.DB.Models.StudyProgram", b =>
                {
                    b.Navigation("StudyGroups");
                });

            modelBuilder.Entity("Backend.DB.Models.User", b =>
                {
                    b.Navigation("DisciplineTeachers");

                    b.Navigation("Reports");
                });
#pragma warning restore 612, 618
        }
    }
}
